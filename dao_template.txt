<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<style type="text/css">
  #app {
    background-color: black;
}
.p-4 {
  padding: 4px;
}
.p-8 {
  padding: 8px;
}
.text-white {
  color: white;
}
.text-blur-white {
  color: rgba(255, 255, 255, 0.7)
}
.text-gray {
  color: #C5C5C5;
}
.text-right {
  text-align: right;
}
.ft-s-10 {
  font-size: 10px;
}
.ft-s-12 {
  font-size: 12px;
}
.ft-s-14 {
  font-size: 14px;
}
.ft-s-16 {
  font-size: 16px;
}
.ft-s-24 {
  font-size: 24px;
}
.ft-s-64 {
  font-size: 64px;
}
.fw-700 {
  font-weight: 700;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.address {
  padding: 0 4px;
}
.bg-grey {
  background-color: grey;
}
.bg-white {
  background-color: white;
}
.general-border {
  border: .5px solid #FFFFFF;
  border-radius: 4px;
}
.border-t {
  border-top: .5px solid #FFFFFF;
}
.border-b {
  border-bottom: .5px solid #FFFFFF;
}
.pointer {
  cursor: pointer;
}
.line-height-one {
  line-height: 1;
}
.word-break {
  white-space: nowrap;
  word-break: keep-all;
  overflow: hidden;
  text-overflow: ellipsis;
}
.relative {
  position: relative;
}
.absolute {
  position: absolute;
}
.bg-gra {
  background: rgba(20, 67, 78, 0.3);
}
.card-padding {
    padding: 54px 74px;
    width: 336px;
}
.sub-header {
    grid-template-columns: 1fr 1fr;
}
.card-padding {
      padding: 54px 74px;
  }
  .sub-header {
      grid-template-columns: 1fr 1fr;
  }
  .basic-info {
    position: absolute;
    z-index: 2;
    top: 0;
    left: 0;
    width: 130px;
    height: 130px;
    padding: 0;
}
.basic-info img {
  max-height: 100%;
  max-width: 100%;
  object-fit: cover;
}
.intro {
    line-height: 1.2;
}
.addr {
    display: inline-block;
    width: 100%;
}
.location {
    position: absolute;
    left: 0;
    top: 138px;
    width: 95px;
    height: 95px;
}
.list-item {
    display: inline-block;
    padding: 4px 8px;
    color: black;
}
.skills-list {
    width: 100%;
    height: 90px;
    overflow-y: scroll;
}
.skills {
  width: 198px;
  height: 130px;
  top: 140px;
  left: 0;
  position: absolute;
  padding: 8px;
}
.des {
    position: absolute;
    right: 0;
    top: 103px;
    width: 233px;
    height: 130px;
    z-index: 3;
}
.des div {
  padding: 30px 15px;
}
.contact {
    width: 198px;
    height: 61px;
    position: absolute;
    top: 0;
    left: 138px;
}
.contract {
    position: absolute;
    width: 198px;
    height: 27px;
    left: 138px;
    top: 70px;
    align-items: center;
}
.contract img {
    padding-left: 14px;
    width: 18px;
    height: 18px;
}
.contract-addr {
  padding-right: 14px;
  margin-left: 10px;
}
.inside {
  position: relative;
  height: 240px;
  width: 336px;
  margin-top: 8px;
}
.homepage {
  padding-left: 12px;
}
.awsome-things-title {
            padding: 4px 8px;
        }
        .circle-button {
            flex: 1;
            text-align: right;
        }
        .dao-list {
            height: 110px;
            display: grid;
            grid-template-columns: 1fr 1fr;
            overflow-y: scroll;
        }
        .position {
            align-items: center;
        }
        .dao-ele {
                align-items: center;
            }
            .partner {
            height: 170px;
            overflow-y: scroll;

        }
    .awsome-things {
      margin-top: 8px;
    }
    .contact-item {
      padding-left: 12px;
      padding-top: 12px;
    }
    .project-item {
        text-decoration: underline;
        display: inline-block;
    }
.normal-container {
    height: 50px;
    align-items: center;
}
</style>
<body>
    <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
    <div id="app">
      <div class="card-padding text-white">
        <div class="text-imb-bold ft-s-64 line-height-one">
          {{cardData.basic_info.name}}
        </div>
        <div class="flex">
          <img src="https://soulcard.noncegeek.com/soulcard_icon/address.svg" alt="" />
          <span class="ft-s-14 bg-grey text-gray addr word-break">
            {{cardData.basic_info.contract_addresses[0].addr}}
          </span>
        </div>
        <div class="inside text-ibm">
          <div class="basic-info general-border">
            <img class='max-w-full max-h-full' :src="cardData.basic_info.avatar" alt="" />
          </div>
          <div class="contact general-border">
            <img @click="contcatClick(false, cardData.basic_info.social_links.discord)" class="pointer contact-item" v-if="cardData.basic_info.social_links.discord" src="https://soulcard.noncegeek.com/soulcard_icon/discord.svg" alt="" />
            <img @click="contcatClick(false, cardData.basic_info.social_links.github_link)" class="pointer contact-item" v-if="cardData.basic_info.social_links.github_link" src="https://soulcard.noncegeek.com/soulcard_icon/github.svg" alt="" />
            <img @click="contcatClick(false, cardData.basic_info.social_links.wechat)" class="pointer contact-item" v-if="cardData.basic_info.social_links.wechat" src="https://soulcard.noncegeek.com/soulcard_icon/wechat.svg" alt="" />
            <img @click="contcatClick(false, cardData.basic_info.social_links.twitter)" class="pointer contact-item" v-if="cardData.basic_info.social_links.twitter" src="https://soulcard.noncegeek.com/soulcard_icon/twitter.svg" alt="" />
            <img @click="contcatClick(true, cardData.basic_info.social_links.mirror_link)" class="pointer contact-item" v-if="cardData.basic_info.social_links.mirror_link" src="https://soulcard.noncegeek.com/soulcard_icon/miro.svg" alt="" />
            <img @click="contcatClick(true, cardData.basic_info.social_links.telegram)" class="pointer contact-item" v-if="cardData.basic_info.social_links.telegram" src="https://soulcard.noncegeek.com/soulcard_icon/telegram.svg" alt="" />
            <div class="ft-s-12 homepage" style="margin-top: 4px">
              {{cardData.basic_info.homepage}}
            </div>
          </div>
          <div class="contract general-border flex pr-[14px] pl-[14px]">
            <img src="https://soulcard.noncegeek.com/soulcard_icon/address.svg" alt="" />
            <span class="contract-addr word-break">
              {{cardData.basic_info.contract_addresses[0].addr}}
            </span>
          </div>
          <div class="location general-border">
            <div>
              <img src={location} alt="" />
            </div>
            <div style="padding: 0 8px;">{{cardData.basic_info.location}}</div>
          </div>
          <div class="des general-border ft-s-14 pt-[26px] pl-[16px]">
            <div>{{cardData.basic_info.slogan}}</div>
          </div>
        </div>
        <div class="awsome-things general-border mt-[8px]">
          <div class="awsome-things-title ft-s-16 fw-700 text-ibm-bold">
            Awesome Things
          </div>
          <div
            class="border-t fw-700 text-ibm ft-s-12 flex"
            style="padding: 8px;"
            v-for="(item, index) in cardData.awesome_things"
            :key="index"
         >
          <div>{{item.title}}</div>
          <div class="circle-button pointer">
            <img @click="jumpTo(item.link)" src="https://soulcard.noncegeek.com/soulcard_icon/right-circle-arrow.svg" alt="" />
          </div>
        </div>
        </div>
        <div class="awsome-things general-border">
          <div class="awsome-things-title ft-s-16 fw-700 text-ibm-bold border-b">
            DAO/Organization
          </div>
          <div class="c-icon flex m-[8px]">
            <img src={c} alt="" />
          </div>
          <div class="dao-list">
            <div class="flex pt-[4px] pl-[8px] mb-[15px]" v-for="(item, index) in cardData.core_members" :key="index">
              <div>
                <img :src="item.avatar" alt="" />
              </div>
              <div class="ml-[10px]">
                <div class="dao-name ft-s-14 ft-700 mb-[5px] line-height-one text-ibm-bold word-break">
                  {{item.name}}
                </div>
                <div class="flex position text-ibm">
                  <span class="word-break">member</span>
                </div>
              </div>
            </div>
          </div>
          <div class="" style="border-top: .5px solid #ffffff">
            <div class="m-icon m-[8px]">
              <img src={m} alt="" />
            </div>
            <div class="relative normal-container flex pl-[8px]">
              <div
              class="absolute member-ele"
              style="left: (index * 25 + 8)px"
              v-for="(item, index) in cardData.members"
              :key="index"
            >
              <img :src="item.avatar" alt="" />
            </div>
              <div class="" style="margin-left: 150px;">{{cardData.members.length + cardData.core_members.length}} &nbsp;members</div>
            </div>
          </div>
        </div>
        <div class="awsome-things general-border mt-[8px]">
          <div class="awsome-things-title ft-s-16 fw-700 text-ibm-bold">
            Partner
          </div>
          <div class="partner">
            <div class="flex border-t p-[8px] dao-ele" v-for="(item, index) in cardData.partner" :key="index">
              <img :src="item.avatar" alt="" />
              <span class="ml-[10px] text-ibm-bold">{{item.name}}</span>
            </div>
          </div>
        </div>
      </div>
    </div>
    <script>
        const { createApp } = Vue
        
        createApp({
          data() {
            return {
              message: 'Hello Vue!',
              cardData: {
                "sub_daos": [],
                "addr": {addr},
                "partners": {partners},
                "members": [],
                "core_members": [],
                "basic_info": {
                  "social_links": {
                    "wechat": '{wechat}',
                    "twitter": '{twitter}',
                    "mirror_link": '{mirror_link}',
                    "github_link": '{mirror_link}',
                    "discord": '{discord}',
                    "telegram": '{telegram}'
                  },
                  "slogan": '{slogan}',
                  "name": '{name}',
                  "location": '{location}',
                  "homepage": '{homepage}',
                  "contract_addresses": [
                    {
                      "alias": "BYAC NFT",
                      "addr": '"0x01"'
                    }
                  ],
                  "avatar": '{avatar}'
                },
                "awesome_things": {awesome_things}
              }
            }
          },
          methods: {
            contcatClick(needJump, link) {
              this.copyContent(link)
              if (needJump) {
                window.open(link)
              }
            },
            jumpTo(link) {
              window.open(link)
            },
            copyContent(value, type = 'input') {
              const input = document.createElement(type);
              input.setAttribute('readonly', 'readonly'); // 设置为只读, 防止在 ios 下拉起键盘
              // input.setAttribute('value', value); // textarea 不能用此方式赋值, 否则无法复制内容
              input.value = value;
              console.log(value)
              document.body.appendChild(input);
              input.setSelectionRange(0, 9999); // 防止 ios 下没有全选内容而无法复制
              input.select();
              document.execCommand('copy');
              document.body.removeChild(input);
            }
          }
        }).mount('#app')
      </script>
</body>
</html>